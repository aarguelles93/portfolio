service: portfolio

frameworkVersion: ">=2.12.0 <3.0.0"

custom:
  env: ${file(./config.${opt:stage, self:provider.stage, 'dev'}.json)}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2
  environment:
    STAGE: ${self:custom.env.STAGE}
    PORTFOLIO_TABLE_NAME: ${self:custom.env.PORTFOLIO_TABLE_NAME}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["PortfolioTable", "Arn" ] }

functions:
  index:
    handler: index.handler
    events:
      - http:
          path: API/helloworld
          method: get
  
  getPortfolio:
    handler: controllers/portfolio.getPortfolio
    events:
      - http:
          path: API/portfolio/{userId}
          method: get    

  createPortfolio:
    handler: controllers/portfolio.createPortfolio
    events:
      - http:
          path: API/portfolio
          method: post

resources:
  Resources:
    PortfolioTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.env.PORTFOLIO_TABLE_NAME}

plugins:
  - serverless-offline